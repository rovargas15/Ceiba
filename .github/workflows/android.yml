name: Android CI

env:
  SAMPLE_PATH: Ceiba

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:

#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#
#      # Set Current Date As Env Variable
#      - name: Set current date as env variable
#        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
#
#      # Set Repository Name As Env Variable
#      - name: Set repository name as env variable
#        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
#
#      - name: Set Up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#
#      - name: Run gradle tests
#        run: ./gradlew testDebug --stacktrace

  collect_coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: stevenleadbeater/kotlin-kover-action@v1.0.0
        id: kover-tests
        with:
          coverage-threshold: 80
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          proxy-url: https://add-pr-comment-proxy-94idvmwyie-uc.a.run.app
      - name: Check coverage
        if: ${{(steps.kover-tests.outputs.line-coverage) < 80}}
        shell: bash
        run: exit "Line coverage expected to be > 80 but was ${{steps.kover-tests.outputs.line-coverage}}"

#
#  sonar:
#    needs: [ build ]
#    name: SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Gradle packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonarqube --info
#
#  build-and-deploy:
#    needs: [ sonar ]
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Set Up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Build AAB
#        id: buildRelease
#        run: ./gradlew bundleRelease
#
#      - name: Sign AAB
#        id: sign
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#
#      - name: Upload AAB
#        id: upload
#        uses: actions/upload-artifact@v1
#        with:
#          name: app
#          path: app/build/outputs/bundle/release/app-release.aab
#
#      - name: Upload to Firebase Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          token: ${{secrets.FIREBASE_TOKEN}}
#          groups: testers
#          file: app/build/outputs/bundle/release/app-release.aab