name: Android CI

env:
  SAMPLE_PATH: Ceiba

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:

  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [ 21, 23, 29 ]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck
  #  build:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - uses: actions/checkout@v1
  #
  #      # Set Current Date As Env Variable
  #      - name: Set current date as env variable
  #        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
  #
  #      # Set Repository Name As Env Variable
  #      - name: Set repository name as env variable
  #        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
  #
  #      - name: Set Up JDK 11
  #        uses: actions/setup-java@v1
  #        with:
  #          java-version: 11
  #
  #      - name: Change wrapper permissions
  #        run: chmod +x ./gradlew
  #
  #      - name: Run gradle tests
  #        run: ./gradlew testDebug --stacktrace

  #
  #  sonar:
  #    needs: [ build ]
  #    name: SonarCloud
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #        with:
  #          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #      - name: Set up JDK 11
  #        uses: actions/setup-java@v1
  #        with:
  #          java-version: 11
  #      - name: Cache SonarCloud packages
  #        uses: actions/cache@v1
  #        with:
  #          path: ~/.sonar/cache
  #          key: ${{ runner.os }}-sonar
  #          restore-keys: ${{ runner.os }}-sonar
  #      - name: Cache Gradle packages
  #        uses: actions/cache@v1
  #        with:
  #          path: ~/.gradle/caches
  #          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
  #          restore-keys: ${{ runner.os }}-gradle
  #      - name: Build and analyze
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #        run: ./gradlew build sonarqube --info
  #
  #  build-and-deploy:
  #    needs: [ sonar ]
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - uses: actions/checkout@v1
  #
  #      - name: Set Up JDK 11
  #        uses: actions/setup-java@v1
  #        with:
  #          java-version: 11
  #
  #      - name: Build AAB
  #        id: buildRelease
  #        run: ./gradlew bundleRelease
  #
  #      - name: Sign AAB
  #        id: sign
  #        uses: r0adkll/sign-android-release@v1
  #        with:
  #          releaseDirectory: app/build/outputs/bundle/release
  #          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
  #          alias: ${{ secrets.KEY_ALIAS }}
  #          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
  #          keyPassword: ${{ secrets.KEY_PASSWORD }}
  #
  #      - name: Upload AAB
  #        id: upload
  #        uses: actions/upload-artifact@v1
  #        with:
  #          name: app
  #          path: app/build/outputs/bundle/release/app-release.aab
  #
  #      - name: Upload to Firebase Distribution
  #        uses: wzieba/Firebase-Distribution-Github-Action@v1
  #        with:
  #          appId: ${{secrets.FIREBASE_APP_ID}}
  #          token: ${{secrets.FIREBASE_TOKEN}}
  #          groups: testers
  #          file: app/build/outputs/bundle/release/app-release.aab
